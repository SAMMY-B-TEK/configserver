server:
  port: 8081
  servlet:
    context-path: /on-boarding
spring:
  activate:
    on-profile: cloud
  datasource:
    ucp:
      url: jdbc:oracle:thin:@${SSERVER}:${SPORT}/${SDB}
      username: ${SUSERNAME}
      password: ${SPASSWORD}
      connectionFactoryClassName: oracle.jdbc.pool.OracleDataSource
      connectionWaitTimeout: ${UCP_CONNECTION_WAIT_TIMEOUT:10000}
      inactiveConnectionTimeout: ${UCP_INACTIVE_CONNECTION_TIMEOUT:10000}
      initialPoolSize: ${UCP_INITIAL_POOL_SIZE:1}
      minPoolSize: ${UCP_MIN_POOL_SIZE:1}
      maxPoolSize: ${UCP_MAX_POOL_SIZE:10}
      validateConnectionOnBorrow: true
    initialize: false
  jpa:
    database-platform: org.hibernate.dialect.Oracle12cDialect
    open-in-view: true
    show-sql: false
    hibernate:
      ddl-auto: none
    properties:
      hibernate:
        dialect: org.hibernate.dialect.Oracle12cDialect
        format_sql: false
        cache:
          use_second_level_cache: true
          use_query_cache: true
          region:
            factory_class: org.hibernate.cache.jcache.JCacheRegionFactory
  liquibase:
    enabled: false

cors:
  allowed:
    origins: ${CORS_ALLOWED_ORIGINS}
    methods: ${CORS_ALLOWED_METHODS}
    headers: ${CORS_ALLOWED_HEADERS}
  exposed:
    headers: ${CORS_EXPOSED_HEADERS}

user:
  service:
    url: ${USER_SERVICE_LOGIN_URL}
    password:
      hashing:
        algorithm: ${USER_PASSWORD_HASHING_ALGORITHM}
        salt: ${USER_PASSWORD_HASHING_SALT}

istd:
  service:
    url: ${ISTD_SERVICE_URL}
    username: ${ISTD_SERVICE_USER_NAME}
    password: ${ISTD_SERVICE_PASSWORD}
    ibm:
      client:
        id: ${ISTD_SERVICE_CLIENT_ID}
        secret: ${ISTD_SERVICE_CLIENT_SECRET}

q:
  decryption:
    key: ${Q_DECRYPTION_KEY}